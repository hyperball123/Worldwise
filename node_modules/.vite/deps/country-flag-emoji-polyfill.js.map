{
  "version": 3,
  "sources": ["../../is-emoji-supported/src/is-emoji-supported.ts", "../../country-flag-emoji-polyfill/src/index.ts"],
  "sourcesContent": [null, "import { isEmojiSupported } from \"is-emoji-supported\";\n\n/**\n * Injects a style element into the HEAD with a web font with country flags,\n * iff the browser does support emojis but not country flags.\n *\n * @param fontName - Override the default font name (\"Twemoji Country Flags\")\n * @param fontUrl - Override the font URL (defaults to a jsdeliver-hosted)\n *\n * @returns true if the web font was loaded (ie the browser does not support country flags)\n */\nexport function polyfillCountryFlagEmojis(\n  fontName = \"Twemoji Country Flags\",\n  fontUrl = \"https://cdn.jsdelivr.net/npm/country-flag-emoji-polyfill@0.1/dist/TwemojiCountryFlags.woff2\"\n) {\n  if (isEmojiSupported(\"ðŸ˜Š\") && !isEmojiSupported(\"ðŸ‡¨ðŸ‡­\")) {\n    const style = document.createElement(\"style\");\n\n    // I generated the `unicode-range` below using\n    // https://wakamaifondue.com/beta/, which is awesome and it helps make sure\n    // this font is never tried for any character that it does not support.\n    //\n    // See build/make-font.sh for more background why these are the relevant\n    // unicode ranges.\n    //\n    // Also, we're setting `font-display` to \"swap\" because without it, all text\n    // will be invisible during the time between this style tag being injected\n    // and the font having been loaded. This happens because developers will\n    // typically set `Twemoji Country Flags` as the first font in their\n    // `font-family` lists, and the browser tries to prevent a \"flash of\n    // unstyled text\" and therefore hide all text instead of rendering it with\n    // potentially the wrong font. This matters when you're waiting for Open\n    // Sans to load and you dont want your blog to briefly render in Times New\n    // Roman first, but it's actively harmful for apps, where text might briefly\n    // disappear just to load some country flag fallbacks that might not even be\n    // on the page.\n    //\n    // Apparently (when I tested this) browsers aren't smart enough to only do\n    // hide characters that match the not-yet-loaded font's unicode-range.\n    // Setting it to \"swap\" unfortunately makes the browser render eg `â–¡` or\n    // `É´ÊŸ` for country flags until the font is in. But this is way better than\n    // hiding all UI text everywhere :D\n    style.textContent = `@font-face {\n      font-family: \"${fontName}\";\n      unicode-range: U+1F1E6-1F1FF, U+1F3F4, U+E0062-E0063, U+E0065, U+E0067,\n        U+E006C, U+E006E, U+E0073-E0074, U+E0077, U+E007F;\n      src: url('${fontUrl}') format('woff2');\n      font-display: swap;\n    }`;\n    document.head.appendChild(style);\n\n    return true;\n  }\n  return false;\n}\n"],
  "mappings": ";;;AASA,IAAI,QAAgB,oBAAI,IAAG;SAQX,iBAAiB,SAAe;AAC9C,MAAI,MAAM,IAAI,OAAO,GAAG;AACtB,WAAO,MAAM,IAAI,OAAO;;AAG1B,MAAM,YAAY,YAAY,OAAO;AACrC,QAAM,IAAI,SAAS,SAAS;AAE5B,SAAO;AACT;AAiBA,IAAM,cAAe,WAAA;AACnB,MAAI,MAAM;AACV,MAAI;AACF,UAAM,SAAS,cAAc,QAAQ,EAAE,WAAW,IAAI;WACtD,IAAA;EAAM;AAGR,MAAI,CAAC,KAAK;AACR,WAAO,WAAA;AAAM,aAAA;IAAK;;AAGpB,MAAM,gBAAgB;AACtB,MAAM,eAAe;AACrB,MAAM,WAAW,KAAK,MAAM,gBAAgB,CAAC;AAG7C,MAAI,OAAO,WAAW;AACtB,MAAI,eAAe;AACnB,MAAI,OAAO,QAAQ,eAAe;AAClC,MAAI,OAAO,SAAS;AAEpB,SAAO,SAAC,SAAe;AACrB,QAAI,UAAU,GAAG,GAAG,eAAe,GAAG,aAAa;AAGnD,QAAI,YAAY;AAChB,QAAI,SAAS,SAAS,GAAG,EAAE;AAG3B,QAAI,YAAY;AAChB,QAAI,SAAS,SAAS,cAAc,EAAE;AAEtC,QAAM,IAAI,IAAI,aAAa,GAAG,GAAG,cAAc,aAAa,EAAE;AAC9D,QAAM,QAAQ,EAAE;AAChB,QAAI,IAAI;AAGR,WAAO,IAAI,SAAS,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK;AAAE;AAGtC,QAAI,KAAK,OAAO;AACd,aAAO;;AAKT,QAAM,IAAI,eAAiB,IAAI,IAAK;AACpC,QAAM,IAAI,KAAK,MAAM,IAAI,IAAI,YAAY;AACzC,QAAM,IAAI,IAAI,aAAa,GAAG,GAAG,GAAG,CAAC,EAAE;AAEvC,QAAI,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG;AACtC,aAAO;;AAKT,QAAI,IAAI,YAAY,OAAO,EAAE,SAAS,cAAc;AAClD,aAAO;;AAIT,WAAO;;AAEX,EAAC;;;AC/FeA,SAAAA,EACdC,KAAW,yBACXC,IAAU,+FAAA;AAEV,MAAIC,iBAAiB,IAAA,KAAA,CAAUA,iBAAiB,MAAA,GAAS;AACvD,UAAMC,IAAQC,SAASC,cAAc,OAAA;AAmCrC,WATAF,EAAMG,cAAc;sBACFN;;;kBAGJC;;QAGdG,SAASG,KAAKC,YAAYL,CAAAA,GAAAA;EAG3B;AACD,SAAA;AACD;",
  "names": ["polyfillCountryFlagEmojis", "fontName", "fontUrl", "isEmojiSupported", "style", "document", "createElement", "textContent", "head", "appendChild"]
}
